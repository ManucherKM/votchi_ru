import { useState } from 'react'
import Button from '../../components/Button/Button'
import CardsType from '../../components/CardsType/CardsType'
import Dropdown from '../../components/Dropdown/Dropdown'
import Input from '../../components/Input/Input'
import InputDateHint from '../../components/InputDateHint/InputDateHint'
import Table from '../../components/UI/Table/Table'

const TablePage = () => {
	const [panelFilter, setPanelFilter] = useState({
		fromDate: {
			hint: 'От',
			date: '',
		},
		toDate: {
			hint: 'До',
			date: '',
		},
		dropDown: {
			selected: '',
			defaultOption: 'Сегодня',
			options: ['Вчера', 'Все'],
		},
	})

	const [visibleRows, setVisibleRows] = useState({
		selected: '',
		defaultOption: '10',
		options: ['25', '50'],
	})

	const mainTableTitles = [
		'Транспорт',
		'Дата',
		'Карта',
		'Адрес',
		'Тип топлива',
		'Бак. л',
		'Стоимость',
	]
	return (
		<div className='wrapper_table'>
			<div className='container'>
				<div className='panel_filter'>
					<Dropdown
						//Дефолное значение
						defaultOption={panelFilter.dropDown.defaultOption}
						// Выбранное значение
						selected={panelFilter.dropDown.selected}
						// Список значений в выподяющем меню
						options={panelFilter.dropDown.options}
						/*
							Изменяем выбранный элемент из выподающего
							списка на новый (который выбрал пользователь)
							s => Новый выбранный элемент выподяющего списка
						*/
						setSelected={s =>
							setPanelFilter(prev => ({
								...prev,
								dropDown: { ...prev.dropDown, selected: s },
							}))
						}
					/>

					<InputDateHint
						// Передаем текущее значение
						date={panelFilter.fromDate.date}
						// Подсказка над инпутом
						hint={panelFilter.fromDate.hint}
						/*
							Изменяем текущую дату на новую (которую выбрал пользователь)
							d => Новая дата выбранная пользователем
						*/
						setDate={d =>
							setPanelFilter(prev => ({
								...prev,
								fromDate: { ...prev.fromDate, date: d },
							}))
						}
					/>

					<InputDateHint
						// Передаем текущее значение
						date={panelFilter.toDate.date}
						// Подсказка над инпутом
						hint={panelFilter.toDate.hint}
						/*
					Изменяем текущую дату на новую (которую выбрал пользователь)
					d => Новая дата выбранная пользователем
					*/
						setDate={d =>
							setPanelFilter(prev => ({
								...prev,
								toDate: { ...prev.toDate, date: d },
							}))
						}
					/>
				</div>
				<div className='info_cards'>
					<CardsType />
				</div>
				<div className='table_filters'>
					<div className='visible_rows'>
						Показывать
						<Dropdown
							defaultOption={visibleRows.defaultOption}
							options={visibleRows.options}
							selected={visibleRows.selected}
							setSelected={s =>
								setVisibleRows(prev => ({ ...prev, selected: s }))
							}
						/>
					</div>
					<div className='download_table'>
						<Button onClick={() => console.log(1)}>
							<svg
								width='13.5'
								height='17.5'
								viewBox='0 0 22 28'
								fill='none'
								xmlns='http://www.w3.org/2000/svg'
							>
								<path
									d='M21.0371 7.45801C21.2129 7.63379 21.3125 7.87109 21.3125 8.12012V26.1875C21.3125 26.7061 20.8936 27.125 20.375 27.125H1.625C1.10645 27.125 0.6875 26.7061 0.6875 26.1875V1.8125C0.6875 1.29395 1.10645 0.875 1.625 0.875H14.0674C14.3164 0.875 14.5566 0.974609 14.7324 1.15039L21.0371 7.45801ZM19.1504 8.55078L13.6367 3.03711V8.55078H19.1504ZM14.5514 17.6697C14.1066 17.6551 13.6338 17.6894 13.0968 17.7564C12.3849 17.3173 11.9056 16.7141 11.5651 15.8278L11.5965 15.6995L11.6328 15.5478C11.7588 15.0166 11.8265 14.629 11.8467 14.2382C11.8619 13.9432 11.8455 13.671 11.7931 13.4188C11.6964 12.8741 11.3111 12.5557 10.8257 12.536C10.373 12.5176 9.95703 12.7704 9.85068 13.1621C9.67754 13.7955 9.77891 14.629 10.146 16.0505C9.67842 17.1652 9.06055 18.4722 8.646 19.2011C8.09258 19.4864 7.66162 19.746 7.29951 20.0337C6.82197 20.4137 6.52373 20.8042 6.4417 21.2144C6.40186 21.4045 6.46191 21.6529 6.59873 21.8565C6.754 22.0874 6.98779 22.2374 7.26816 22.2591C7.97568 22.3139 8.84521 21.5844 9.80527 19.937C9.90166 19.9048 10.0036 19.8708 10.1281 19.8286L10.4768 19.7108C10.6974 19.6364 10.8573 19.5831 11.0155 19.5318C11.7011 19.3086 12.2196 19.1677 12.6913 19.0874C13.511 19.5263 14.4585 19.814 15.0966 19.814C15.6233 19.814 15.9793 19.5409 16.1079 19.1111C16.2207 18.7338 16.1313 18.2961 15.8888 18.0541C15.638 17.8077 15.1769 17.6899 14.5514 17.6697ZM7.28604 21.432V21.4215L7.28984 21.4115C7.33271 21.3007 7.38773 21.195 7.45391 21.0963C7.5793 20.9035 7.75186 20.7008 7.96572 20.4849C8.08057 20.3691 8.2001 20.2563 8.34043 20.1298C8.37178 20.1017 8.57217 19.9232 8.60967 19.8881L8.93691 19.5834L8.69902 19.9622C8.33809 20.5376 8.01172 20.9519 7.73223 21.222C7.62939 21.3216 7.53887 21.3948 7.46562 21.442C7.44145 21.4581 7.41585 21.4721 7.38916 21.4836C7.37715 21.4886 7.3666 21.4915 7.35605 21.4924C7.34492 21.4938 7.33361 21.4923 7.32324 21.488C7.31222 21.4834 7.3028 21.4756 7.29618 21.4656C7.28956 21.4557 7.28603 21.444 7.28604 21.432ZM10.9757 15.0371L10.9095 15.1543L10.8685 15.026C10.7776 14.738 10.7108 14.3041 10.6924 13.9127C10.6713 13.4674 10.7067 13.2002 10.8474 13.2002C11.0448 13.2002 11.1354 13.5166 11.1424 13.9927C11.1488 14.411 11.0829 14.8464 10.9754 15.0371H10.9757ZM10.8055 16.7498L10.8503 16.6312L10.9115 16.7425C11.254 17.3647 11.6984 17.8839 12.1871 18.2457L12.2926 18.3236L12.164 18.35C11.6855 18.449 11.2399 18.5979 10.6306 18.8437C10.6941 18.8179 9.99717 19.1032 9.8208 19.1709L9.66699 19.2298L9.74902 19.0868C10.1108 18.4569 10.4451 17.7005 10.8052 16.7498H10.8055ZM15.4232 18.984C15.193 19.0748 14.6973 18.9937 13.8245 18.621L13.603 18.5267L13.8433 18.5091C14.5259 18.4584 15.0093 18.4959 15.2911 18.599C15.4112 18.643 15.4912 18.6983 15.5267 18.7616C15.5453 18.7916 15.5516 18.8276 15.5442 18.8621C15.5367 18.8966 15.5162 18.9269 15.4868 18.9465C15.4682 18.9629 15.4466 18.9756 15.4232 18.984Z'
									fill='black'
								/>
							</svg>
							PDF
						</Button>
						<Button onClick={() => console.log(2)}>
							<svg
								width='13.5'
								height='17.5'
								viewBox='0 0 14 18'
								fill='none'
								xmlns='http://www.w3.org/2000/svg'
							>
								<path
									d='M7.875 4.64844V0H0.84375C0.376172 0 0 0.365723 0 0.820312V16.6797C0 17.1343 0.376172 17.5 0.84375 17.5H12.6562C13.1238 17.5 13.5 17.1343 13.5 16.6797V5.46875H8.71875C8.25469 5.46875 7.875 5.09961 7.875 4.64844ZM9.98789 8.28857L7.875 11.4844L9.98789 14.6802C10.1672 14.9536 9.9668 15.3125 9.63281 15.3125H8.40586C8.25117 15.3125 8.10703 15.2305 8.0332 15.0972C7.34414 13.8599 6.75 12.749 6.75 12.749C6.525 13.2549 6.39844 13.4326 5.46328 15.1006C5.38945 15.2339 5.24883 15.3159 5.09414 15.3159H3.86719C3.5332 15.3159 3.33281 14.957 3.51211 14.6836L5.63203 11.4878L3.51211 8.29199C3.3293 8.01855 3.5332 7.65967 3.86719 7.65967H5.09063C5.24531 7.65967 5.38945 7.7417 5.46328 7.875C6.38086 9.54297 6.16641 9.02344 6.75 10.2163C6.75 10.2163 6.96445 9.81641 8.03672 7.875C8.11055 7.7417 8.25469 7.65967 8.40937 7.65967H9.63281C9.9668 7.65625 10.1672 8.01514 9.98789 8.28857ZM13.5 4.1665V4.375H9V0H9.21445C9.43945 0 9.65391 0.0854492 9.81211 0.239258L13.2539 3.58887C13.4121 3.74268 13.5 3.95117 13.5 4.1665Z'
									fill='black'
								/>
							</svg>
							XLSX
						</Button>
					</div>
					<div className='search'>
						<label>
							<Input
								type='text'
								placeholder='Поиск'
								onChange={() => console.log()}
							/>
							<svg
								width='16'
								height='16'
								viewBox='0 0 16 16'
								fill='none'
								xmlns='http://www.w3.org/2000/svg'
							>
								<path
									d='M10.9167 9.66667H10.2583L10.025 9.44167C10.8699 8.46169 11.3343 7.21058 11.3333 5.91667C11.3333 4.84535 11.0157 3.7981 10.4205 2.90733C9.82527 2.01656 8.9793 1.3223 7.98954 0.912322C6.99977 0.502347 5.91066 0.395079 4.85993 0.604082C3.8092 0.813085 2.84404 1.32897 2.08651 2.08651C1.32897 2.84404 0.813085 3.8092 0.604082 4.85993C0.395079 5.91066 0.502347 6.99977 0.912322 7.98954C1.3223 8.9793 2.01656 9.82527 2.90733 10.4205C3.7981 11.0157 4.84535 11.3333 5.91667 11.3333C7.25834 11.3333 8.49167 10.8417 9.44167 10.025L9.66667 10.2583V10.9167L13.8333 15.075L15.075 13.8333L10.9167 9.66667ZM5.91667 9.66667C3.84167 9.66667 2.16667 7.99167 2.16667 5.91667C2.16667 3.84167 3.84167 2.16667 5.91667 2.16667C7.99167 2.16667 9.66667 3.84167 9.66667 5.91667C9.66667 7.99167 7.99167 9.66667 5.91667 9.66667Z'
									fill='#808080'
								/>
							</svg>
						</label>
					</div>
				</div>
				<div className='main_table'>
					<Table titles={mainTableTitles}>123</Table>
				</div>
			</div>
		</div>
	)
}

export default TablePage
